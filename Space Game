<!DOCTYPE html>
<html lang="de">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Raketen-Meteorit Spiel</title>
<style>
  body {
    margin: 0;
    background: #000;
    overflow: hidden;
    touch-action: none;
  }

  canvas {
    display: block;
    margin: 0 auto;
    background: #000;
  }

  .controls {
    position: fixed;
    bottom: 10px;
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding: 0 20px;
    box-sizing: border-box;
  }

  .button {
    width: 80px;
    height: 80px;
    background: #444;
    border-radius: 50%;
    color: white;
    font-size: 40px;
    text-align: center;
    line-height: 80px;
    user-select: none;
  }
</style>
</head>
<body>

<canvas id="game"></canvas>

<div class="controls">
  <div class="button" id="left">&#8592;</div>
  <div class="button" id="right">&#8594;</div>
</div>

<script>
const canvas = document.getElementById('game');
const ctx = canvas.getContext('2d');

canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

let rocket = { x: canvas.width/2, y: canvas.height - 100, width: 40, height: 60, speed: 10 };
let bullets = [];
let meteors = [];
let meteorSpeed = 3;
let leftPressed = false;
let rightPressed = false;

// Meteor Generator
function spawnMeteor() {
  let x = Math.random() * (canvas.width - 50);
  meteors.push({ x: x, y: -50, width: 50, height: 50 });
}

// Shoot
function shoot() {
  bullets.push({ x: rocket.x + rocket.width/2 - 5, y: rocket.y, width: 10, height: 20 });
}

// Event Listeners
document.getElementById('left').addEventListener('touchstart', e => leftPressed = true);
document.getElementById('left').addEventListener('touchend', e => leftPressed = false);
document.getElementById('right').addEventListener('touchstart', e => rightPressed = true);
document.getElementById('right').addEventListener('touchend', e => rightPressed = false);

canvas.addEventListener('click', shoot);
canvas.addEventListener('touchstart', e => { shoot(); });

// Game Loop
function update() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);

  // Move rocket
  if(leftPressed) rocket.x -= rocket.speed;
  if(rightPressed) rocket.x += rocket.speed;
  rocket.x = Math.max(0, Math.min(canvas.width - rocket.width, rocket.x));

  // Draw rocket
  ctx.fillStyle = 'red';
  ctx.fillRect(rocket.x, rocket.y, rocket.width, rocket.height);

  // Update bullets
  bullets.forEach((b, i) => {
    b.y -= 10;
    ctx.fillStyle = 'yellow';
    ctx.fillRect(b.x, b.y, b.width, b.height);

    // Remove offscreen bullets
    if(b.y + b.height < 0) bullets.splice(i, 1);
  });

  // Update meteors
  meteors.forEach((m, i) => {
    m.y += meteorSpeed;
    ctx.fillStyle = 'gray';
    ctx.fillRect(m.x, m.y, m.width, m.height);

    // Check collision with bullets
    bullets.forEach((b,j) => {
      if(b.x < m.x + m.width && b.x + b.width > m.x && b.y < m.y + m.height && b.y + b.height > m.y){
        meteors.splice(i,1);
        bullets.splice(j,1);
      }
    });

    // Check collision with rocket
    if(rocket.x < m.x + m.width && rocket.x + rocket.width > m.x && rocket.y < m.y + m.height && rocket.y + rocket.height > m.y){
      alert("Game Over!");
      document.location.reload();
    }

    // Remove offscreen meteors
    if(m.y > canvas.height) meteors.splice(i,1);
  });

  requestAnimationFrame(update);
}

// Spawn meteors every second
setInterval(spawnMeteor, 1000);

// Start game
update();

window.addEventListener('resize', () => {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
});
</script>

</body>
</html>
